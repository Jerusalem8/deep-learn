1.链表
（1）单链表
（2）双链表

2.栈和队列的实际实现
（1）利用双向链表实现
（2）利用数组实现
注：栈和队列的实际应用非常多，在刷题中巩固，不做过多笔记，相关算法见左程云【Github】 https://github.com/algorithmzuo/algorithmbasic2020/tree/master/src/class03

3.递归★
递归算法的时间复杂度 公式 T(N)=aT(N/b)+O(N^d)   （a,b,d均为常数）
（1）子问题的规模小于总规模N就可以使用此公式（子问题的规模不一样时，用此公式不能直接出结果，有特殊计算方法）
（2）N/b代表子问题的规模大小，a代表子问题调用的次数
（3）O(N^d)代表的是除子问题之外其他部分代码的时间复杂度级别
另外，有关于logN的判断定理，见图片（个人笔记图床）
具体讲解视频 https://www.bilibili.com/video/BV1NU4y1M7rF?p=41     2小时左右

4.哈希表和有序表
重点见代码 class02 -> HashMapAndSortedMap

5.前缀树
（1）单个字符串中，字符从前到后的加到一棵多叉树上；
（2）字符放在路上，节点上有专属的数据项（常见的是pass和end值）；
（3）所有样本都这样添加，如果没有路就新建，如有路就复用；
（4）沿途节点的pass值增加1，每个字符串结束时来到的节点end值增加1。